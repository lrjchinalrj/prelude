.prelude-progress (@use) when (@use = true) {
	.progress {
		.rem(height, @progress-height);
		.margin-bottom-rem(@progress-margin-bottom);
		.padding-rem(@progress-padding);
		background-color: @progress-bgColor;
		border: 1px solid @progress-borderColor;
		overflow: hidden;
		.hook-progress;

		.meter {
			display: block;
			height: 100%;
			background: @progress-meter-bgColor;
			.hook-progress-meter;
		}

		// type
		// ======================================================================
		&--radius {
			.border-radius(@progress-radius);
		}
		&--round {
			.border-radius(@progress-round);
		}
		&--radius,
		&--round {
			.meter {
				.border-radius(inherit);
			}
		}

		// size
		// ======================================================================
		&--small {
			.rem(height, @progress-small-height);
		}
		&--large {
			.rem(height, @progress-large-height);
		}

		// success
		// ======================================================================
		&--success {
			.hook-progress-success;
			.meter {
				background-color: @progress--success-meter-size;
				.hook-progress-meter-success;
			}
		}

		// alert
		// ======================================================================
		&--alert {
			.hook-progress-alert;
			.meter {
				background-color: @progress--alert-meter-size;
				.hook-progress-meter-alert;
			}
		}
		// striped
		// ======================================================================
		&--striped {
			.hook-progress-striped;
			.meter {
				.gradient-striped;
				.background-size(@progress--striped-meter-size);
				.hook-progress-meter-striped;
			}
		}
	}	

	// Hook
	// ==========================================================================
	.hook-progress-misc;
}

.prelude-progress (@use-progress);