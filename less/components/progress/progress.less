.prelude-progress (@use) when (@use = true) {
	.progress {
		.rem(height, @progress-height);
		.margin-bottom-rem(@progress-margin-bottom);
		.padding-rem(@progress-padding);
		background-color: @progress-bgColor;
		border: 1px solid @progress-borderColor;
		overflow: hidden;
		.hook-progress;

		.meter {
			display: block;
			height: 100%;
			background: @progress-meter-bgColor;
			.hook-progress-meter;
		}
	}

	// type
	// ======================================================================
	.progress--radius {
		.border-radius(@progress-radius);
	}
	.progress--round {
		.border-radius(@progress-round);
	}
	.progress--radius,
	.progress--round {
		.meter {
			.border-radius(inherit);
		}
	}

	// size
	// ======================================================================
	.progress--small {
		.rem(height, @progress-small-height);
	}
	.progress--large {
		.rem(height, @progress-large-height);
	}

	// success
	// ======================================================================
	.progress--success {
		.hook-progress-success;
		.meter {
			background-color: @progress--success-meter-size;
			.hook-progress-meter-success;
		}
	}

	// alert
	// ======================================================================
	.progress--alert {
		.hook-progress-alert;
		.meter {
			background-color: @progress--alert-meter-size;
			.hook-progress-meter-alert;
		}
	}
	// striped
	// ======================================================================
	.progress--striped {
		.hook-progress-striped;
		.meter {
			.gradient-striped;
			.background-size(@progress--striped-meter-size);
			.hook-progress-meter-striped;
		}
	}

	// Hook
	// ==========================================================================
	.hook-progress-misc;
}

.prelude-progress (@use-progress);